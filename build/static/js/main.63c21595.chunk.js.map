{"version":3,"sources":["styles/styledTheme.tsx","components/Header.tsx","App.tsx","store/Cake/CakeTypes.ts","store/Cake/CakeActions.ts","components/Cake.tsx","components/CakeChoose.tsx","components/CakeBoth.tsx","store/IceCream/IceCreamTypes.ts","store/IceCream/IceCreamActions.ts","styles/styledButtonTheme.tsx","components/IceCream.tsx","store/Cake/CakeReducer.ts","store/Festivals/FestivalTypes.ts","store/Festivals/FestivalReducer.ts","store/IceCream/IceCreamReducer.ts","store/Users/UserTypes.ts","store/Users/UserReducer.ts","store/Bugs/BugTypes.ts","store/Bugs/BugReducer.ts","store/rootReducer.ts","store/store.ts","store/Users/UserActions.ts","components/Users.tsx","components/FestivalsInput.tsx","store/Festivals/FestivalActions.ts","components/FestivalsDisplay.tsx","components/Bugs.tsx","store/Bugs/BugAction.ts","index.tsx"],"names":["regalBlue","happyPink","offWhite","Box","styled","div","HeaderStyle","header","linkStyle","color","padding","textDecoration","Header","to","style","Wrapper","Image","img","App","href","target","src","alt","width","BUY_CAKE","buyCake","numOfCakes","type","payload","Cake","useSelector","state","cake","dispatch","useDispatch","onClick","disabled","CakeChoose","React","useState","inputCakes","setInputCakes","value","onChange","event","Number","min","max","placeholder","CakeBoth","BUY_ICECREAM","buyIceCream","numOfIceCreams","ButtonStyle","button","IceCream","iceCream","buyOneIceCream","display","initialState","cakeReducer","action","INPUT_FESTIVAL","festivals","festivalReducer","iceCreamReducer","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","loading","users","error","userReducer","ADD_BUG","UPDATE_BUG","DELETE_BUG","id","description","resolved","bugReducer","map","bug","filter","rootReducer","combineReducers","usersData","festives","bugs","store","createStore","applyMiddleware","logger","thunk","fetchUsersRequest","fetchUsers","axios","get","then","response","data","fetchUsersSuccess","catch","console","log","errorMsg","message","fetchUsersFailure","Users","useEffect","user","name","email","phone","Object","entries","company","key","FestivalsInput","submitFestival","festival","setFestival","addFestival","preventDefault","inputFestival","FestivalsDisplay","festive","Bugs","setBug","bugAdded","alert","addBug","bugResolved","updateBug","bugDeleted","deleteBug","toString","ReactDOM","render","StrictMode","theme","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.63c21595.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const regalBlue = '#34b4eb'\nexport const happyPink = '#ff22f1'\nexport const offWhite = '#fffbf5'\n\nexport const Box = styled.div`\n  width: 35rem;\n  padding-bottom: 30px;\n  border: 1px dashed ${regalBlue};\n  border-radius: 15px;\n  text-align: center;\n  background: ${offWhite};\n  margin: 0 auto;\n  margin-top: 30px;\n  margin-bottom: 50px;\n`\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { regalBlue, offWhite } from '../styles/styledTheme'\n\nconst HeaderStyle = styled.header`\n  background: #333;\n  color: ${regalBlue};\n  text-align: center;\n  padding: 10px;\n`\n\nconst linkStyle = {\n  color: `${offWhite}`,\n  padding: '7px',\n  textDecoration: 'none',\n}\n\nconst Header: React.FC = () => {\n  return (\n    <>\n      <HeaderStyle>\n        <h2>Hello there! 👩‍💻👨‍💻 </h2>\n        <Link to='/' style={linkStyle}>\n          Home\n        </Link>\n        |\n        <Link to='/icecreams' style={linkStyle}>\n          IceCreams\n        </Link>\n        |\n        <Link to='/cakes' style={linkStyle}>\n          Cakes\n        </Link>\n        |\n        <Link to='/users' style={linkStyle}>\n          Users\n        </Link>\n        |\n        <Link to='/festivals' style={linkStyle}>\n          Festivals\n        </Link>\n        |\n        <Link to='/bugs' style={linkStyle}>\n          Bugs\n        </Link>\n      </HeaderStyle>\n    </>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport './App.css'\nimport Header from './components/Header'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n`\n\nconst Image = styled.img`\n  width: 60%;\n  margin: 0 auto;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  border-radius: 20px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n`\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <a href='https://reactjs.org/' target='_blank'>\n        <Wrapper>\n          <Image\n            src='https://bit.ly/37jVKoo'\n            alt='nyona kueh asian cake dessert'\n            width='500'\n          />\n        </Wrapper>\n      </a>\n    </>\n  )\n}\n\nexport default App\n","export const BUY_CAKE = 'BUY_CAKE'\n\nexport interface BuyCakeAction {\n  type: string\n  payload: number\n}\n","import { BuyCakeAction, BUY_CAKE } from './CakeTypes'\n\nconst buyCake = (numOfCakes: number = 1): BuyCakeAction => {\n  return {\n    type: BUY_CAKE,\n    payload: numOfCakes,\n  }\n}\n\nexport default buyCake\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport buyCake from '../store/Cake/CakeActions'\nimport { RootState } from '../store/rootReducer'\n\nconst Cake: React.FC = () => {\n  const { numOfCakes } = useSelector((state: RootState) => state.cake)\n\n  const dispatch = useDispatch()\n\n  const buyOneCake = () => {\n    dispatch(buyCake())\n  }\n  return (\n    <>\n      <h3>Cakes 🍰 -- {numOfCakes <= 0 ? 'SOLD OUT' : numOfCakes}</h3>\n      <button onClick={buyOneCake} disabled={numOfCakes <= 0}>\n        Buy 1 cake\n      </button>\n    </>\n  )\n}\n\nexport default Cake\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport buyCake from '../store/Cake/CakeActions'\nimport { RootState } from '../store/rootReducer'\n\nconst CakeChoose: React.FC = () => {\n  const { numOfCakes } = useSelector((state: RootState) => state.cake)\n\n  const [inputCakes, setInputCakes] = React.useState(2)\n\n  const howManyCakes = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputCakes(Number(event.target.value))\n  }\n\n  const dispatch = useDispatch()\n\n  const buyXCakes = () => {\n    dispatch(buyCake(inputCakes))\n  }\n  return (\n    <>\n      <h3>Cakes 🥮 -- {numOfCakes <= 0 ? 'FINISHED' : numOfCakes}</h3>\n      <input\n        type='number'\n        value={inputCakes}\n        onChange={howManyCakes}\n        min='2'\n        max={numOfCakes}\n        placeholder='2'\n      />\n      &nbsp;\n      <button onClick={buyXCakes} disabled={numOfCakes <= 0}>\n        Buy {inputCakes} cakes\n      </button>\n    </>\n  )\n}\n\nexport default CakeChoose\n","import React from 'react'\nimport { Box } from '../styles/styledTheme'\nimport Cake from './Cake'\nimport CakeChoose from './CakeChoose'\nimport Header from './Header'\n\nconst CakeBoth: React.FC = () => {\n  return (\n    <>\n      <Header />\n      <Box>\n        <Cake />\n        <CakeChoose />\n      </Box>\n    </>\n  )\n}\n\nexport default CakeBoth\n","export const BUY_ICECREAM = 'BUY_ICECREAM'\n\nexport interface IceCreamAction {\n  type: string\n  payload: number\n}\n","import { BUY_ICECREAM, IceCreamAction } from './IceCreamTypes'\n\nconst buyIceCream = (numOfIceCreams: number = 1): IceCreamAction => ({\n  type: BUY_ICECREAM,\n  payload: numOfIceCreams,\n})\n\nexport default buyIceCream\n","import styled from 'styled-components'\n\nimport { regalBlue } from './styledTheme'\n\nconst ButtonStyle = styled.button`\n  background-color: ${regalBlue};\n  padding: 0.25em 0.5em;\n  transition: background-color 0.7s, color 0.25s;\n\n  &:hover {\n    border: 2px solid yellow;\n    background-color: #ff22f1;\n    color: #ffffff;\n    cursor: pointer;\n  }\n`\nexport default ButtonStyle\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport buyIceCream from '../store/IceCream/IceCreamActions'\nimport { RootState } from '../store/rootReducer'\nimport ButtonStyle from '../styles/styledButtonTheme'\nimport { Box } from '../styles/styledTheme'\nimport Header from './Header'\n\nconst IceCream: React.FC = () => {\n  const { numOfIceCreams } = useSelector((state: RootState) => state.iceCream)\n\n  const dispatch = useDispatch()\n\n  const buyOneIceCream = () => {\n    dispatch(buyIceCream())\n  }\n\n  return (\n    <>\n      <Header />\n      <Box>\n        <h3>\n          Ice-creams 🍨 -- {numOfIceCreams <= 0 ? 'ALL GONE' : numOfIceCreams}\n        </h3>\n        <button onClick={buyOneIceCream} disabled={numOfIceCreams <= 0}>\n          Buy 1 icecream\n        </button>\n        &nbsp;\n        <ButtonStyle\n          onClick={buyOneIceCream}\n          style={{ display: numOfIceCreams <= 0 ? 'none' : '' }}\n          disabled={numOfIceCreams <= 0}\n        >\n          Buy 1 icecream\n        </ButtonStyle>\n      </Box>\n    </>\n  )\n}\n\nexport default IceCream\n","import { BuyCakeAction, BUY_CAKE } from './CakeTypes'\n\ninterface CakeState {\n  numOfCakes: number\n}\n\nconst initialState = {\n  numOfCakes: 10,\n}\n\nconst cakeReducer = (\n  state: CakeState = initialState,\n  action: BuyCakeAction\n) => {\n  switch (action.type) {\n    case BUY_CAKE: {\n      return {\n        ...state,\n        numOfCakes: state.numOfCakes - action.payload,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport default cakeReducer\n","export const INPUT_FESTIVAL = 'INPUT_FESTIVAL'\n\nexport interface InputFestivalAction {\n  type: string\n  payload: string\n}\n","import { InputFestivalAction, INPUT_FESTIVAL } from './FestivalTypes'\n\nexport interface FestivalState {\n  festivals: string[]\n}\n\nconst initialState = {\n  festivals: [],\n}\n\nconst festivalReducer = (\n  state: FestivalState = initialState,\n  action: InputFestivalAction\n) => {\n  switch (action.type) {\n    case INPUT_FESTIVAL: {\n      return {\n        ...state,\n        festivals: [...state.festivals, action.payload],\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport default festivalReducer\n","import { BUY_ICECREAM, IceCreamAction } from './IceCreamTypes'\n\ninterface IceCreamState {\n  numOfIceCreams: number\n}\n\nconst initialState = {\n  numOfIceCreams: 8,\n}\n\nconst iceCreamReducer = (\n  state: IceCreamState = initialState,\n  action: IceCreamAction\n) => {\n  switch (action.type) {\n    case BUY_ICECREAM: {\n      return {\n        ...state,\n        numOfIceCreams: state.numOfIceCreams - action.payload,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport default iceCreamReducer\n","export const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST'\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS'\nexport const FETCH_USERS_FAILURE = 'FETCH_USERS_FAILURE'\n\nexport interface Users {\n  users: []\n}\n\nexport interface ErrorMessage {\n  error: string\n}\n\nexport interface FetchUsersRequestAction {\n  type: string\n}\n\nexport interface FetchUsersSuccessAction {\n  type: string\n  payload: Users\n}\n\nexport interface FetchUsersFailureAction {\n  type: string\n  payload: ErrorMessage\n}\n\n// interface Payload {\n//   loading: boolean\n//   users: []\n//   error: string\n// }\n\nexport interface UserAction {\n  type: string\n  payload: any // meh?\n}\n","import {\n  FETCH_USERS_FAILURE,\n  FETCH_USERS_REQUEST,\n  FETCH_USERS_SUCCESS,\n  UserAction,\n} from './UserTypes'\n\ninterface UserState {\n  loading: boolean\n  users: object[]\n  error: string\n}\n\nconst initialState = {\n  loading: false,\n  users: [],\n  error: '',\n}\n\nconst userReducer = (state: UserState = initialState, action: UserAction) => {\n  switch (action.type) {\n    case FETCH_USERS_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n      }\n    }\n    case FETCH_USERS_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        users: action.payload,\n        error: '',\n      }\n    }\n    case FETCH_USERS_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        users: [],\n        error: action.payload,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport default userReducer\n","export const ADD_BUG = 'ADD_BUG'\nexport const UPDATE_BUG = 'UPDATE_BUG'\nexport const DELETE_BUG = 'DELETE_BUG'\n\nexport interface AddBugAction {\n  type: string\n  payload: {\n    description: string\n  }\n}\n\nexport interface ResolveBugAction {\n  type: string\n  payload: {\n    id: number\n  }\n}\n\nexport interface DeleteBugAction {\n  type: string\n  payload: {\n    id: number\n  }\n}\n","import { ADD_BUG, DELETE_BUG, UPDATE_BUG } from './BugTypes'\n\nlet id = 0\n\ninterface BugState {\n  id: number\n  description: string\n  resolved: boolean\n}\n\nconst initialState = [\n  {\n    id,\n    description: '',\n    resolved: false,\n  },\n]\n\nconst bugReducer = (state: BugState[] = initialState, action: any) => {\n  switch (action.type) {\n    case ADD_BUG: {\n      return [\n        ...state,\n        {\n          id: ++id,\n          description: action.payload.description,\n          resolved: false,\n        },\n      ]\n    }\n    case UPDATE_BUG: {\n      return state.map((bug) =>\n        bug.id !== action.payload.id ? bug : { ...bug, resolved: true }\n      )\n    }\n    case DELETE_BUG: {\n      return state.filter((bug) => bug.id !== action.payload.id)\n    }\n    default:\n      return state\n  }\n}\n\nexport default bugReducer\n","import { combineReducers } from 'redux'\n\n// reducers\nimport cakeReducer from './Cake/CakeReducer'\nimport festivalReducer from './Festivals/FestivalReducer'\nimport iceCreamReducer from './IceCream/IceCreamReducer'\nimport userReducer from './Users/UserReducer'\nimport bugReducer from './Bugs/BugReducer'\n\nexport const rootReducer = combineReducers({\n  cake: cakeReducer,\n  iceCream: iceCreamReducer,\n  usersData: userReducer,\n  festives: festivalReducer,\n  bugs: bugReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n","import { applyMiddleware, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport { rootReducer } from './rootReducer'\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk))\n\nexport default store\n","import axios from 'axios'\n\nimport {\n  ErrorMessage,\n  FetchUsersFailureAction,\n  FetchUsersRequestAction,\n  FetchUsersSuccessAction,\n  FETCH_USERS_FAILURE,\n  FETCH_USERS_REQUEST,\n  FETCH_USERS_SUCCESS,\n  Users,\n} from './UserTypes'\n\nexport const fetchUsersRequest = (): FetchUsersRequestAction => ({\n  type: FETCH_USERS_REQUEST,\n})\n\nexport const fetchUsersSuccess = (users: Users): FetchUsersSuccessAction => ({\n  type: FETCH_USERS_SUCCESS,\n  payload: users,\n})\n\nexport const fetchUsersFailure = (\n  errorMsg: ErrorMessage\n): FetchUsersFailureAction => ({\n  type: FETCH_USERS_FAILURE,\n  payload: errorMsg,\n})\n\nexport const fetchUsers = () => {\n  return (dispatch: any) => {\n    dispatch(fetchUsersRequest)\n    axios\n      .get('https://jsonplaceholder.typicode.com/users')\n      .then((response) => {\n        const users = response.data\n        // console.log('Users Data >>>' ,users)\n        dispatch(fetchUsersSuccess(users))\n      })\n      .catch((error) => {\n        console.log('ERROR >>>', error)\n        const errorMsg = error.message\n        dispatch(fetchUsersFailure(errorMsg))\n      })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../store/rootReducer'\nimport { fetchUsers } from '../store/Users/UserActions'\nimport { Box } from '../styles/styledTheme'\nimport Header from './Header'\n\nconst Users: React.FC = () => {\n  const users = useSelector((state: RootState) => state.usersData)\n  // console.log('users >>> ', users)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchUsers())\n  }, [])\n\n  return users.loading ? (\n    <>\n      <Header />\n      <Box>\n        <code>Loading...</code>\n      </Box>\n    </>\n  ) : (\n    <>\n      <Header />\n      <Box>\n        <h2>\n          Users from <code>https://jsonplaceholder.typicode.com/users</code>\n        </h2>\n        {!users || !users.users ? (\n          <code>There in an error: {users.error}</code>\n        ) : (\n          users.users.map((user: any) => {\n            return (\n              <div key={user.id}>\n                <p>Name: {user.name}</p>\n                <p>Email: {user.email}</p>\n                <p>Phone: {user.phone}</p>\n                {/* <p>Address: {JSON.stringify(user.address)}</p> */}\n                <h4>Company</h4>\n                {Object.entries(user.company).map(([key, value]) => {\n                  return (\n                    <div key={key}>\n                      {key} : {value}\n                    </div>\n                  )\n                })}\n\n                <hr />\n              </div>\n            )\n          })\n        )}\n      </Box>\n    </>\n  )\n}\n\nexport default Users\n\n// company:\n// bs: \"e-enable extensible e-tailers\"\n// catchPhrase: \"Implemented secondary concept\"\n// name: \"Abernathy Group\"\n","import React from 'react'\nimport ButtonStyle from '../styles/styledButtonTheme'\n\ninterface FestivalProps {\n  submitFestival: (festive: string) => void\n}\n\nconst FestivalsInput: React.FC<FestivalProps> = ({ submitFestival }) => {\n  const [festival, setFestival] = React.useState('')\n\n  const inputFestival = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFestival(event.target.value)\n  }\n\n  const addFestival = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    event.preventDefault()\n    submitFestival(festival)\n    setFestival('')\n  }\n\n  return (\n    <>\n      <label>What's your favourite festival day?</label>\n      <br />\n      <input\n        type='text'\n        value={festival}\n        onChange={inputFestival}\n        placeholder='Gong xi fa cai'\n      />\n      &nbsp;\n      <button onClick={addFestival} disabled={festival === ''}>\n        Add festival 🎆\n      </button>\n      &nbsp;\n      <ButtonStyle onClick={addFestival} disabled={festival === ''}>\n        Add festival 🎆\n      </ButtonStyle>\n    </>\n  )\n}\n\nexport default FestivalsInput\n","import { InputFestivalAction, INPUT_FESTIVAL } from './FestivalTypes'\n\nconst inputFestival = (festival: string): InputFestivalAction => {\n  return {\n    type: INPUT_FESTIVAL,\n    payload: festival,\n  }\n}\n\nexport default inputFestival\n","import React from 'react'\nimport FestivalsInput from './FestivalsInput'\nimport { useSelector, useDispatch } from 'react-redux'\nimport inputFestival from '../store/Festivals/FestivalActions'\nimport Header from './Header'\nimport { RootState } from '../store/rootReducer'\nimport { FestivalState } from '../store/Festivals/FestivalReducer'\nimport { Box } from '../styles/styledTheme'\n\nconst FestivalsDisplay: React.FC = () => {\n  const dispatch = useDispatch()\n\n  const submitFestival = (festive: string) => {\n    dispatch(inputFestival(festive))\n  }\n\n  // type is correct, but cannot reach state.festives.festivals\n  // const festives = useSelector<FestivalState, FestivalState['festivals']>(\n  //   (state) => state.festivals\n  // )\n  const festives = useSelector((state: RootState) => state.festives.festivals)\n\n  return (\n    <>\n      <Header />\n      <Box>\n        <h3>Festivals 🎄🕯️🎁🎵🍊</h3>\n        <FestivalsInput submitFestival={submitFestival} />\n        <hr />\n        <ol>\n          {festives.map((festive) => {\n            return (\n              <div key={festive}>\n                <li>{festive}</li>\n              </div>\n            )\n          })}\n        </ol>\n      </Box>\n    </>\n  )\n}\n\nexport default FestivalsDisplay\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { addBug, deleteBug, updateBug } from '../store/Bugs/BugAction'\nimport { RootState } from '../store/rootReducer'\nimport { Box } from '../styles/styledTheme'\nimport Header from './Header'\n\nconst Bugs: React.FC = () => {\n  const [bug, setBug] = React.useState('')\n\n  const bugInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setBug(event.target.value)\n  }\n  const dispatch = useDispatch()\n\n  const bugs = useSelector((state: RootState) => state.bugs)\n  // console.log(bugs)\n\n  const bugAdded = (description: string) => {\n    description === ''\n      ? alert('Please add a bug')\n      : dispatch(addBug(description)) // MAXIMUM STACK CALL\n    setBug('')\n    // console.log(description)\n  }\n\n  const bugResolved = (id: number) => {\n    dispatch(updateBug(id))\n  }\n\n  const bugDeleted = (id: number) => {\n    dispatch(deleteBug(id))\n  }\n\n  return (\n    <>\n      <Header />\n      <Box>\n        <h3>Bugs 🐛</h3>\n        <input\n          type='text'\n          value={bug}\n          onChange={bugInput}\n          placeholder='name your bug 🕷️'\n        />\n        &nbsp;\n        <button onClick={() => bugAdded(bug)}>Add bug</button>\n        <hr />\n        {bugs.map((bug) => {\n          if (bug.id !== 0)\n            return (\n              <div key={bug.id}>\n                <p>Id: {bug.id}</p>\n                <p>Description: {bug.description}</p>\n                <p>Resolved: {bug.resolved.toString()}</p>\n                <button\n                  onClick={() => bugResolved(bug.id)}\n                  disabled={bug.resolved}\n                >\n                  Resolve bug\n                </button>\n                &nbsp;\n                <button onClick={() => bugDeleted(bug.id)}>Delete bug</button>\n              </div>\n            )\n        })}\n      </Box>\n    </>\n  )\n}\n\nexport default Bugs\n","import {\n  AddBugAction,\n  ResolveBugAction,\n  DeleteBugAction,\n  ADD_BUG,\n  UPDATE_BUG,\n  DELETE_BUG,\n} from './BugTypes'\n\n// can return object like this and the one below?\nexport const addBug = (description: string): AddBugAction => ({\n  type: ADD_BUG,\n  payload: {\n    description,\n  },\n})\n\n// diff way of returning\nexport const updateBug = (id: number): ResolveBugAction => {\n  return {\n    type: UPDATE_BUG,\n    payload: {\n      id,\n    },\n  }\n}\n\nexport const deleteBug = (id: number): DeleteBugAction => ({\n  type: DELETE_BUG,\n  payload: {\n    id,\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n// route\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n// components\nimport CakeBoth from './components/CakeBoth'\nimport IceCream from './components/IceCream'\n\n// redux\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport Users from './components/Users'\nimport FestivalsDisplay from './components/FestivalsDisplay'\nimport Bugs from './components/Bugs'\n\n// style\nimport { ThemeProvider } from 'styled-components'\nimport * as theme from './styles/styledTheme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Route exact path='/' component={App} />\n          <Route exact path='/icecreams' component={IceCream} />\n          <Route exact path='/cakes' component={CakeBoth} />\n          <Route exact path='/users' component={Users} />\n          <Route exact path='/festivals' component={FestivalsDisplay} />\n          <Route exact path='/bugs' component={Bugs} />\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}